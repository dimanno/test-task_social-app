{
  "openapi": "3.0.1",
  "info": {
    "title": "Social_App API (from PettersonApps)",
    "description": "Create REST API. Implement authorization and CRUD for users ",
    "contact": {
      "name": "Dmytro",
      "url": "https://github.com/dimanno",
      "email": "dimanno.dev@gmail.com"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Logs user into the system",
        "description": "loginUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "refresh_token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email/password supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    },
    "/posts": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Returns a list of posts",
        "description": "get posts",
        "responses": {
          "200": {
            "description": "All posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostBodyModels"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "posts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Returns a object of created post",
        "description": "post object that needs to be added",
        "operationId": "add Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "type": "string",
                    "default": "My first post"
                  },
                  "body": {
                    "type": "string",
                    "default": "Post about application"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Post was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostBodyModels"
                }
              }
            }
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}": {
      "get": {
        "tags": [
          "posts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Returns a object of post by id",
        "description": "get post by Id",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostBodyModels"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "posts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update posts by id",
        "description": "update post",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "body": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "post is updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostBodyModels"
                }
              }
            }
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "posts"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete post by id",
        "description": "delete post",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "post was deleted",
            "content": {}
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/comments": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "Get comments to post",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "comment to posts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentBodyModels"
                }
              }
            }
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "posts"
        ],
        "summary": "Returns a object of created comment",
        "description": "comment object that needs to be added",
       "parameters": [
         {
           "name": "postId",
           "in": "path",
           "description": "ID of post to return",
           "required": true,
           "schema": {
             "type": "string"
           }
         }
       ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "body": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Post was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentBodyModels"
                }
              }
            }
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      }
    },
    "/comments": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Get all comments",
        "responses": {
          "200": {
            "description": "All comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentBodyModels"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{commentsId}": {
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "Update comment by id",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of post to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "comment is updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostBodyModels"
                }
              }
            }
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "Delete comment by id",
        "description": "delete comment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of post to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "comment was deleted",
            "content": {}
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Returns a list of users",
        "description": "getUsers",
        "responses": {
          "200": {
            "description": "All users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBodyModels"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create user",
        "description": "user object that needs to be added",
        "operationId": "addUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "username",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "default": "admin"
                  },
                  "username": {
                    "type": "string",
                    "default": "adminTest"
                  },
                  "email": {
                    "type": "string",
                    "default": "admin@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "default": "12345Az$"
                  },
                  "city": {
                    "type": "string",
                    "default": "Lviv"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBodyModels"
                }
              }
            }
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Return user object",
        "description": "getUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBodyModels"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update user by id",
        "description": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user is updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBodyModels"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete user by id",
        "description": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user was deleted",
            "content": {}
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/follow": {
      "put": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Follow the user",
        "description": "the user ID to be follow is transmitted in the link. The ID of the user who wants to monitor is passed in the body of the request",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to be follow",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "the user ID ,who wants to follow",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "61c0ad44751a23db0cd35837",
                    "description": "MongoDB ID"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully",
            "content": {}
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/unfollow": {
      "put": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Unfollow the user",
        "description": "the user ID to be unfollow is transmitted in the link. The ID of the user who wants to monitor is passed in the body of the request",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to be unfollow",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "the user ID ,who wants to unfollow",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "MongoDB ID"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully",
            "content": {}
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/posts": {
      "get": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Get users posts",
        "description": "get post",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All posts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostBodyModels"
                }
              }
            }
          },
          "400": {
            "description": "Just an error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonErrors"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PostBodyModels": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "comments": {
            "type": "array"
          },
          "_id": {
            "type": "string",
            "description": "MongoDB ID",
            "example": "12345qwerty"
          },
          "user_id": {
            "type": "string",
            "description": "MongoDB ID of the user to whom the post belongs",
            "example": "12345qwerty"
          },
          "createdAt": {
            "type": "string",
            "description": "date in UTC when post create",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date in UTC when post update"
          }
        }
      },
      "UserBodyModels": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "MongoDB ID",
            "example": "12345qwerty"
          },
          "email": {
            "type": "string",
            "example": "admin@gmail.com"
          },
          "name": {
            "type": "string",
            "example": "admin"
          },
          "city": {
            "type": "string"
          }
        }
      },
      "CommentBodyModels": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "_id": {
            "type": "string",
            "description": "MongoDB ID",
            "example": "12345qwerty"
          },
          "post_id": {
            "type": "string",
            "description": "MongoDB ID of the user to whom the post belongs",
            "example": "12345qwerty"
          },
          "createdAt": {
            "type": "string",
            "description": "date in UTC when post create",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date in UTC when post update"
          }
        }
      },
      "commonErrors": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "example": "Something went wrong"
          },
          "code": {
            "type": "number",
            "example": 400
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "description": "Enter JWT access token",
        "type": "apiKey",
        "in": "header",
        "name": "authorization"
      }
    }
  }
}

